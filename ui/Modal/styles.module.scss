.modal {
    $modal-types: (
        "success": #00c896,
        "error": #ee6464,
        "info": #8685ef
    );
    display: flex;
    justify-content: center;
    align-items: center;

    &-dialog,
    &-dialog__body form {
        display: flex;
        flex-direction: column;
    }
    &-dialog__body .form .form-controller {
        width: 100%;
    }
    &-dialog {
        width: calc(map-get($map: $container-max-widths, $key: xxl) / 12 * 4);
        min-height: calc($maxScreenHeight / 5);
        max-height: $maxScreenHeight;

        padding: 0.75rem 0.75rem 1.5rem 0.75rem;
        background-color: $white-color;
        &__body {
            margin-top: 0.75rem;
            flex-grow: 1;
            text-align: justify;
        }
        .btn {
            margin: 1.5rem auto 0;
            max-width: 50%;
            @include bp(sm) {
                min-width: 100%;
            }
        }
        .modal-info {
            margin-top: 1.25rem;
            text-decoration: underline;
            text-align: justify;
        }
        @include bp(sm) {
            // * 0.75rem - padding from both sides. Width = 336px
            width: calc(map-get($container-max-widths, xs) - 0.75rem);
        }
    }

    // * STATE MODIF. & SERVICE CLASSES
    @each $state, $stroke-color in $modal-types {
        .modal-dialog--#{$state} .modal-header svg {
            stroke: $stroke-color;
        }
    }
}

// * MODAL HEADER
.modal-header {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    border-bottom: 1px solid $dark-color24;
    padding-bottom: 0.375rem;
    svg {
        @include icon-size(28px, 0);
        margin-right: 0.5rem;
        stroke-width: map-get($map: $stroke-width, $key: sm);
    }
    &-content {
        flex-grow: 1;
        font-size: 24px;
    }
}

// * NON STANDART MODALS

.modal-dialog--send {
    // * every form-controller contain 1 input
    .form-controller .inp {
        width: 100%;
        margin-top: 1rem;
    }
}

.modal-dialog--get {
    .h5 {
        font-weight: 400;
    }
    .modal-dialog__body-content {
        display: flex;
        justify-content: space-between;
        margin-top: 0.4rem;
        span {
            width: 90%;
            word-break: break-all;
        }
        .copy-btn svg {
            @include icon-size(map-get($icon-size, md), 0);
            stroke: $dark-color;
            stroke-width: calc(map-get($map: $stroke-width, $key: sm) / 2);
        }
    }
    .modal-dialog__body-qr-code {
        display: flex;
        justify-content: center;
        margin: 1rem 0;
        img {
            width: 10rem;
            height: 10rem;
        }
    }
}

// * MODAL SURVEY

.modal-dialog {
    .form-controller__label.navlink {
        font-size: 1.2rem;
        font-weight: 500;
        margin-bottom: 1rem;
    }
    .radio-group,
    .checkbox-group {
        width: 100%;
    }
}

.form-survey-finish {
    text-align: center;
    svg {
        @include icon-size(map-get($icon-size, xxl), 0);
        stroke: $dark-color;
        stroke-width: calc(map-get($map: $stroke-width, $key: sm) / 2);
    }
    &__info {
        margin-top: 1rem;
        .navlink {
            letter-spacing: 0.02em;
            cursor: text;
            span {
                padding-left: 0.66rem;
                color: $primary-accent-color;
            }
        }
    }
}

// * MODAL CONNECT

.modal-dialog--connect {
    .form-label-legend.navlink {
        font-weight: 400;
        text-align: center;
    }
    .form-inp-grid {
        margin-top: 1rem;
        .inp {
            min-width: 6rem;
        }
    }
    .form-connect-promo svg,
    .form-connect-success svg,
    .form-connect-error svg {
        width: 4.5rem;
        height: 4.5rem;
        stroke-width: calc(map-get($map: $stroke-width, $key: sm) / 2);
    }
    .form-connect-promo svg {
        stroke: $primary-accent-color;
    }
    .form-connect-success svg {
        stroke: $success-green;
    }
    .form-connect-error svg {
        stroke: $error-red;
    }
}

// * Library styles
.react-responsive-modal-root .react-responsive-modal-container {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.8);
    animation-delay: 0.75s;
}

.react-responsive-modal-modal {
    position: relative;
    margin: 0;
    padding: 0;
    border-radius: $sm-border-radius;
    // * Rewrite default inline styles. 0.75rem - scrollbar width
    margin-right: 0.75rem !important;

    @include bp(md) {
        margin-right: 0rem !important;
    }
}

.react-responsive-modal-closeButton {
    // * Don't change line-height & position
    position: absolute;
    top: 0px;
    right: 15px;
    cursor: pointer;
    font-weight: 600;
    font-size: 1.25rem;
    line-height: 2.1;
    color: $dark-color;
}

/* ----- Fixed Screen Glitch When Close Modal ----- */
.react-responsive-modal-overlay,
.react-responsive-modal-container,
.react-responsive-modal-modal {
    animation-fill-mode: forwards !important;
}
